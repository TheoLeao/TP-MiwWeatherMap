//Définition des breakpoints via une MAP
$breakpoints: (
    "XS": 480px,  //Téléphone small
    "S": 576px,   //Téléphone large
    "M": 768px,   //Tablette
    "L": 960px,   //Desktop normal
    "XL": 1200px  //Desktop large
);

//Mixin qui permet d'utiliser facilement les mediaQueries
@mixin respond-to($breakpoint) {
    // Recuperer la valeur depuis la clé
    $value: map-get($breakpoints, $breakpoint);

    //Si la clé existe dans la MAP
    @if $value != null {
        //Retourner le media queries avec la valeur correspondant à la clé
        @media (min-width: $value) {
            @content;
        }
    }

    //Si le media n'existe pas dans la map
    @else {
        @warn "Problème `#{$breakpoint}`. "
            + "Vérifier que  `$breakpoints` est définit dans la map.";
    }
}
@mixin flex-column{
    display: flex;
    flex-direction: column;
}
@mixin flex-column-verticalBetween{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}
@mixin flex-column-verticalEvenly{
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
}
@mixin flex-column-HorizontalLeft{
    display: flex;
    flex-direction: column;
    align-items: left;
}
@mixin flex-column-verticalCenter{
    display:flex;
    flex-direction: column;
    justify-content: center;
}
@mixin flex-column-verticalEvenly{
    display:flex;
    flex-direction: column;
    justify-content: space-evenly;
}
@mixin flex-column-horizontalCenter{
    display:flex;
    flex-direction: column;
    align-items: center;
}
@mixin flex-column-verticalHorizontalCenter{
    display: flex;
    flex-direction: column;
    align-items: center;
}
@mixin flex-row-horizontalCenter{
    display:flex;
    flex-direction: row;
    justify-content: center;
}
@mixin flex-row-verticalCenter{
    display:flex;
    flex-direction: row;
    align-items: center;
}
@mixin flex-row-HorizontalBetween{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}